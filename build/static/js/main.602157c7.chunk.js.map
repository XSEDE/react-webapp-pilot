{"version":3,"sources":["App.js","index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","TypeMapping","CurrentResourceType","React","createElement","FontAwesomeIcon","size","icon","faRunning","faLaptop","faCloud","faUsers","faCog","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","handleCheckbox","event","setState","_defineProperty","target","checked","handleSearchTerm","searchTerm","handleSearchButton","activePage","componentDidMount","BackPage","console","log","individualTrue","handleClick","searchField","resourceID","affiliation","resourceGroup","provider","checkedName","checkedDescription","checkedTopics","checkedKeywords","state","loading","result","aggregations","total","searchTime","_createClass","key","this","prevProps","prevState","_componentDidMount","_asyncToGenerator","_callee","url","currentTimeInMillisecondsBefore","response","data","currentTimeInMillisecondsAfter","stateFromSettings","r_id","_url","_response","_data","_context","Date","now","fetch","json","window","SETTINGS","ResourceGroup","filter","_ref","Name","Affiliation","_ref2","_objectSpread","results","count","apply","arguments","title","_this2","_this$state","Router","Fragment","Container","fluid","className","getTitle","Row","Col","xs","span","offset","lg","onChange","onClick","faSearch","FormGroup","row","FormControlLabel","control","Checkbox","color","label","faWindowRestore","map","affiliationIndex","Link","to","ResourceGroupIndex","Type","TypeIndex","ProviderID","Provider","ProviderIndex","ID","resource","resourceIndex","CurrentProviderID","ProviderArray","ProviderIDMapping","dangerouslySetInnerHTML","__html","Description","Pagination","itemClass","linkClass","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","hideFirstLastPages","handlePageChange","bind","faArrowLeft","CurrentKeyWords","KeyWords","Keywords","CurrentQualityLevel","QualityLevel","CurrentAudience","Audience","Relations","RelationType","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.602157c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLaptop } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCloud } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faWindowRestore } from \"@fortawesome/free-solid-svg-icons\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Pagination from \"react-js-pagination\";\nimport { Checkbox, FormGroup, FormControlLabel } from \"@material-ui/core\";\n\nfunction ProviderIDMapping(CurrentProviderID, ProviderArray) {\n  for (let i = 0; i < ProviderArray.length; i++) {\n    if (CurrentProviderID === ProviderArray[i].ID) {\n      return <p>&nbsp;{ProviderArray[i].Name}</p>;\n    }\n  }\n  return <p>&nbsp;No Provider</p>;\n}\n\nfunction TypeMapping(CurrentResourceType) {\n  if (CurrentResourceType === \"Executable Software\") {\n    return <FontAwesomeIcon size=\"1x\" icon={faRunning} />;\n  } else if (CurrentResourceType === \"Online Service\") {\n    return <FontAwesomeIcon size=\"1x\" icon={faLaptop} />;\n  } else if (CurrentResourceType === \"Cloud Image\") {\n    return <FontAwesomeIcon size=\"1x\" icon={faCloud} />;\n  } else if (CurrentResourceType === \"Vendor Software\") {\n    return <FontAwesomeIcon size=\"1x\" icon={faUsers} />;\n  } else {\n    return <FontAwesomeIcon size=\"1x\" icon={faCog} />;\n  }\n}\nfunction KeyWords(CurrentKeyWords) {\n  if (CurrentKeyWords !== \"\" && CurrentKeyWords !== null) {\n    return (\n      <React.Fragment>\n        <b>&nbsp;KeyWords&nbsp;</b>\n        <div className=\"attributes\">{CurrentKeyWords}</div>\n        <br />\n      </React.Fragment>\n    );\n  }\n  return;\n}\nfunction QualityLevel(CurrentQualityLevel) {\n  if (CurrentQualityLevel !== \"\" && CurrentQualityLevel !== null) {\n    return (\n      <React.Fragment>\n        <b>&nbsp;Quality Level&nbsp;</b>\n        <div className=\"attributes\">{CurrentQualityLevel}</div>\n        <br />\n      </React.Fragment>\n    );\n  }\n  return;\n}\nfunction Audience(CurrentAudience) {\n  if (CurrentAudience !== \"\" && CurrentAudience !== null) {\n    return (\n      <React.Fragment>\n        <b>&nbsp;Audience&nbsp;</b>\n        <div className=\"attributes\">{CurrentAudience}</div>\n        <br />\n      </React.Fragment>\n    );\n  }\n  return;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      individualTrue: false,\n      loading: true,\n      result: [],\n      aggregations: [],\n      searchTerm: \"\",\n      searchField: \"\",\n      total: 0,\n      resourceID: \"\",\n      affiliation: \"\",\n      resourceGroup: \"\",\n      type: \"\",\n      provider: \"\",\n      activePage: 1,\n      checkedName: true,\n      checkedDescription: true,\n      checkedTopics: true,\n      checkedKeywords: true,\n      searchTime: 0\n    };\n  }\n\n  handleCheckbox = (name) => (event) => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleSearchTerm = (event) => {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  };\n\n  handleSearchButton = () => {\n    this.setState({\n      activePage: 1\n    });\n    this.componentDidMount();\n  };\n\n  handlePageChange(activePage) {\n    //console.log(`active page is ${pageNumber - 1}`);\n    this.setState({\n      activePage: activePage,\n      searchTerm: \"\"\n    });\n  }\n\n  BackPage = () => {\n    console.log(\"back page\");\n    this.setState({ individualTrue: false });\n  };\n\n  handleClick = () => {\n    console.log(\"reset\");\n    this.setState({\n      individualTrue: false,\n      searchTerm: \"\",\n      searchField: \"\",\n      resourceID: \"\",\n      affiliation: \"\",\n      resourceGroup: \"\",\n      type: \"\",\n      provider: \"\",\n      activePage: 1,\n      checkedName: true,\n      checkedDescription: true,\n      checkedTopics: true,\n      checkedKeywords: true\n    });\n    this.componentDidMount();\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.individualTrue !== this.state.individualTrue ||\n      //prevState.activePage !== this.state.activePage ||\n      prevState.affiliation !== this.state.affiliation ||\n      prevState.resourceGroup !== this.state.resourceGroup ||\n      prevState.type !== this.state.type ||\n      prevState.provider !== this.state.provider\n    ) {\n      this.setState({\n        activePage: 1\n      });\n      this.componentDidMount();\n    } else if (prevState.activePage !== this.state.activePage) {\n      this.componentDidMount();\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"didmount called....\");\n    console.log(\"individualTrue = \", this.state.individualTrue);\n    //https://info.xsede.org/wh1/resource-api/v3/resource_esearch/?resource_groups=Software&page=1\n    //https://info.xsede.org/wh1/resource-api/v3/resource_esearch/?resource_groups=Software&page=1&format=json\n    if (this.state.individualTrue === false) {\n      this.state.searchField = \"\";\n      if (this.state.checkedName === true) {\n        this.state.searchField = this.state.searchField + \"Name,\";\n      }\n      if (this.state.checkedDescription === true) {\n        this.state.searchField =\n          this.state.searchField + \"ShortDescription,Description,\";\n      }\n      if (this.state.checkedTopics === true) {\n        this.state.searchField = this.state.searchField + \"Topics,\";\n      }\n      if (this.state.checkedKeywords === true) {\n        this.state.searchField = this.state.searchField + \"Keywords,\";\n      }\n      if (\n        this.state.checkedName === false &&\n        this.state.checkedDescription === false &&\n        this.state.checkedTopics === false &&\n        this.state.checkedKeywords === false\n      ) {\n        this.state.checkedName = true;\n        this.state.checkedDescription = true;\n        this.state.checkedTopics = true;\n        this.state.checkedKeywords = true;\n      }\n      console.log(this.state.searchField);\n      //this.state.pageNumber = this.state.activePage - 1;\n      const url =\n        \"https://operations-api.access-ci.org/wh2/resource/v4/resource_esearch/?format=json&aggregations=type,affiliation,resourcegroup,providerid&search_terms=\"+\n        // \"https://info.xsede.org/wh1/resource-api/v3/resource_esearch/?format=json&aggregations=type,affiliation,resourcegroup,providerid&search_terms=\" +\n        this.state.searchTerm +\n        \"&page=\" +\n        this.state.activePage +\n        \"&affiliations=\" +\n        this.state.affiliation +\n        \"&resource_groups=\" +\n        this.state.resourceGroup +\n        \"&types=\" +\n        this.state.type +\n        \"&providers=\" +\n        this.state.provider +\n        \"&search_fields=\" +\n        this.state.searchField;\n      //const url = \"https://info.xsede.org/wh1/resource-api/v3/resource_esearch/?format=json&aggregations=type,affiliation,resourcegroup&search_terms=\"\n\n      console.log(this.state.searchTerm);\n      console.log(url);\n      var currentTimeInMillisecondsBefore = Date.now();\n      const response = await fetch(url);\n      const data = await response.json();\n      var currentTimeInMillisecondsAfter = Date.now();\n      //this.state.searchTime = currentTimeInMillisecondsAfter - currentTimeInMillisecondsBefore;\n\n      let stateFromSettings = {}\n      if (window.SETTINGS.resourceGroup) {\n        data.aggregations.ResourceGroup = data.aggregations.ResourceGroup\n                            .filter(({Name}) => Name === window.SETTINGS.resourceGroup);\n\n        stateFromSettings[\"resourceGroup\"] = window.SETTINGS.resourceGroup;\n      }\n\n      if (window.SETTINGS.affiliation) {\n        data.aggregations.Affiliation = data.aggregations.Affiliation\n                            .filter(({Name}) => Name === window.SETTINGS.affiliation);\n\n        stateFromSettings[\"affiliation\"] = window.SETTINGS.affiliation;\n      }\n\n      this.setState({\n        searchTime:\n          currentTimeInMillisecondsAfter - currentTimeInMillisecondsBefore,\n        result: data.results,\n        aggregations: data.aggregations,\n        total: data.count,\n        loading: false,\n        resourceGroup: \"Software\",\n        ...stateFromSettings\n      });\n    } else if (this.state.individualTrue === true) {\n      // const { id } = this.props.id;\n      // const {id} = this.props.match.params;\n      // console.log('properties = ', this.props);\n      // console.log('id = ', id);\n      const r_id = this.state.resourceID; // window.location.pathname;\n      const url =\n        \"https://operations-api.access-ci.org/wh2/resource/v4/resource/id/\" +\n        // \"https://info.xsede.org/wh1/resource-api/v3/resource/id/\" +\n        r_id +\n        \"/?format=json\";\n\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        result: data.results,\n        loading: false\n      });\n    }\n  }\n\n  getTitle() {\n    if (window.SETTINGS.title) {\n        return window.SETTINGS.title\n    } else {\n        return \"Resource Tools and Services Discovery\"\n    }\n  }\n\n  render() {\n    const { loading, result, aggregations, total, individualTrue } = this.state;\n    if (loading) {\n      return (\n        <div>\n          <center>Loading...</center>\n        </div>\n      );\n    }\n\n    if (individualTrue === false) {\n      return (\n        <Router>\n          <React.Fragment>\n            <Container fluid>\n              <div className=\"page\">\n                <h1 className=\"title\">{this.getTitle()}</h1>\n                <Row>\n                  <Col xs={{ span: 8, offset: 4 }} lg={{ span: 10, offset: 2 }}>\n                    <div className=\"input-box\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        value={this.state.searchTerm}\n                        onChange={this.handleSearchTerm}\n                      />\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => this.handleSearchButton()}\n                      >\n                        <FontAwesomeIcon size=\"1x\" icon={faSearch} />\n                      </button>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={{ span: 8, offset: 4 }} lg={{ span: 10, offset: 2 }}>\n                    <b className=\"textCSS\">\n                      Search Fields (at least one required): &nbsp;\n                    </b>\n                    <div className=\"noNewLine\">\n                      <FormGroup row>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={this.state.checkedName}\n                              onChange={this.handleCheckbox(\"checkedName\")}\n                              value=\"checkedName\"\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"Name\"\n                        />\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={this.state.checkedDescription}\n                              onChange={this.handleCheckbox(\n                                \"checkedDescription\"\n                              )}\n                              value=\"checkedDescription\"\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"Description\"\n                        />\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={this.state.checkedTopics}\n                              onChange={this.handleCheckbox(\"checkedTopics\")}\n                              value=\"checkedTopics\"\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"Topics\"\n                        />\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={this.state.checkedKeywords}\n                              onChange={this.handleCheckbox(\"checkedKeywords\")}\n                              value=\"checkedKeywords\"\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"Keywords\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={{ span: 8, offset: 4 }} lg={{ span: 10, offset: 2 }}>\n                    {this.state.activePage * 25 <= total && (\n                      <div>\n                        <b className=\"textCSS\">\n                          Viewing: {(this.state.activePage - 1) * 25 + 1} -{\" \"}\n                          {this.state.activePage * 25} of {total}{\" \"}\n                          &nbsp;&nbsp;&nbsp;&nbsp; Click on a title to view item\n                          details.\n                        </b>\n                      </div>\n                    )}\n                    {this.state.activePage * 25 > total && (\n                      <div>\n                        <b className=\"textCSS\">\n                          Viewing: {(this.state.activePage - 1) * 25 + 1} -{\" \"}\n                          {total} of {total} &nbsp;&nbsp;&nbsp;&nbsp; Click on a\n                          title to view item details.\n                        </b>\n                      </div>\n                    )}\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"4\" lg=\"2\">\n                    <button\n                      className=\"btn btn-default\"\n                      type=\"button\"\n                      onClick={() => this.handleClick()}\n                    >\n                      <FontAwesomeIcon size=\"1x\" icon={faWindowRestore} />\n                      &nbsp;&nbsp;Reset\n                    </button>\n                    <br />\n                    <div className=\"terms\">\n                      <b className=\"selectionHeader\">By Affiliation:</b> <br />\n                      {aggregations.Affiliation.map((affiliation, affiliationIndex) => (\n                        <div\n                          className=\"selectionDetails\"\n                          key={affiliationIndex}\n                        >\n                          <Link\n                            to={this.props}\n                            onClick={() =>\n                              this.setState({\n                                affiliation: affiliation.Name\n                              })\n                            }\n                          >\n                            <FontAwesomeIcon size=\"1x\" icon={faCog} />{\" \"}\n                            {affiliation.Name}\n                          </Link>\n                          {\" (\" + affiliation.count + \")\"}\n                        </div>\n                      ))}\n                      <b className=\"selectionHeader\">By Resource Group:</b>{\" \"}\n                      <br />\n                      {aggregations.ResourceGroup.map((ResourceGroup, ResourceGroupIndex) => (\n                        <div\n                          className=\"selectionDetails\"\n                          key={ResourceGroupIndex}\n                        >\n                          <Link\n                            to={this.props}\n                            onClick={() =>\n                              this.setState({\n                                resourceGroup: ResourceGroup.Name\n                              })\n                            }\n                          >\n                            <FontAwesomeIcon size=\"1x\" icon={faCog} />{\" \"}\n                            {ResourceGroup.Name}\n                          </Link>\n                          {\" (\" + ResourceGroup.count + \")\"}\n                          <br />\n                        </div>\n                      ))}\n                      <b className=\"selectionHeader\">By Type:</b> <br />\n                      {aggregations.Type.map((Type, TypeIndex) => (\n                        <div\n                          className=\"selectionDetails\"\n                          key={TypeIndex}\n                        >\n                          <Link\n                            to={this.props}\n                            onClick={() =>\n                              this.setState({\n                                type: Type.Name\n                              })\n                            }\n                          >\n                            {TypeMapping(Type.Name)}\n                            {\" \" + Type.Name}\n                          </Link>\n                          {\" (\" + Type.count + \")\"}\n                          <br />\n                        </div>\n                      ))}\n                      <b className=\"selectionHeader\">By Provider:</b> <br />\n                      {aggregations.ProviderID.map((Provider, ProviderIndex) => (\n                        <div\n                          className=\"selectionDetails\"\n                          key={ProviderIndex}\n                        >\n                          <Link\n                            to={this.props}\n                            onClick={() =>\n                              this.setState({\n                                provider: Provider.ID\n                              })\n                            }\n                          >\n                            <FontAwesomeIcon size=\"1x\" icon={faCog} />{\" \"}\n                            {Provider.Name}\n                          </Link>\n                          {\" (\" + Provider.count + \")\"}\n                          <br />\n                        </div>\n                      ))}\n                    </div>\n                  </Col>\n                  <Col xs=\"8\" lg=\"10\">\n                    <div className=\"results\">\n                      {result.map((resource, resourceIndex) => (\n                        <div key={resourceIndex}>\n                          <article className=\"result\">\n                            {/*<h3>{resource.Affiliation}</h3>*/}\n                            <h2>\n                              <Link\n                                to={this.props}\n                                onClick={() =>\n                                  this.setState({\n                                    resourceID: resource.ID,\n                                    individualTrue: true\n                                  })\n                                }\n                              >\n                                {resource.Name}\n                              </Link>\n                            </h2>\n                            <div className=\"details\">\n                              <div className=\"smallDetails\">\n                                {TypeMapping(resource.Type)}\n                                {\"  \" +\n                                  resource.Type +\n                                  \"; Affiliation: \" +\n                                  resource.Affiliation +\n                                  \" \"}\n                                <div className=\"noNewLine\">\n                                  <FontAwesomeIcon size=\"1x\" icon={faCog} />\n                                  <div className=\"noNewLine\">\n                                    {ProviderIDMapping(\n                                      resource.ProviderID,\n                                      aggregations.ProviderID\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: resource.Description\n                                }}\n                              ></p>\n                            </div>\n                          </article>\n                        </div>\n                      ))}\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={{ span: 8, offset: 4 }} lg={{ span: 10, offset: 2 }}>\n                    <Pagination\n                      itemClass=\"page-item\"\n                      linkClass=\"page-link\"\n                      activePage={this.state.activePage}\n                      itemsCountPerPage={25}\n                      totalItemsCount={total}\n                      pageRangeDisplayed={5}\n                      hideFirstLastPages={true}\n                      onChange={this.handlePageChange.bind(this)}\n                    />\n                    <b className=\"textCSS\">\n                      Query Took: {this.state.searchTime}ms\n                    </b>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n          </React.Fragment>\n        </Router>\n      );\n    }\n    if (individualTrue === true) {\n      return (\n        <Container fluid>\n          <div className=\"page\">\n            <h1 className=\"title\">{this.getTitle()}</h1>\n            <button className=\"btn btn-primary\" onClick={this.BackPage}>\n              <FontAwesomeIcon size=\"1x\" icon={faArrowLeft} />\n            </button>\n            <Row>\n              <Col xs={10}>\n                <div className=\"results\">\n                  {result.map((resource, resourceIndex) => (\n                    <div key={resourceIndex} className=\"article\">\n                      <article className=\"result\">\n                        <div className=\"individualh1\">\n                          <b>{resource.Name}</b>\n                        </div>\n                        <br />\n                        <div className=\"details\">\n                          <b>Description:</b>\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: resource.Description\n                            }}\n                          ></div>\n                          <br />\n                          <h1>{resource.ResourceGroup} Type:&nbsp;</h1>\n                          <h2> {\" \" + resource.Type}</h2>\n                          <br />\n                          <h1>Attributes</h1>\n                          <br />\n                          {KeyWords(resource.Keywords)}\n                          {QualityLevel(resource.QualityLevel)}\n                          {Audience(resource.Affiliation)}\n                          <br />\n                          <h1>Relations</h1>\n                          <br />\n                          {resource.Relations &&\n                            resource.Relations.map((resource, resourceIndex) => (\n                              <div key={resourceIndex}>\n                                <b>&nbsp;{resource.RelationType}&nbsp;</b>\n                                {resource.Name}\n                              </div>\n                            ))}\n                        </div>\n                      </article>\n                    </div>\n                  ))}\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      );\n    }\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"Operations_WebApp_SoftwareDiscovery\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}